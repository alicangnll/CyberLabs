#!/bin/bash

# ROP Vulnerability Lab Test Script
# Tests the ROP exploitation laboratory

echo "=== ROP Vulnerability Lab Test Script ==="

# Create compiled directory if it doesn't exist
mkdir -p compiled

# Detect OS and set appropriate flags
if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    echo "[+] Detected Linux, using Linux-specific flags"
    COMPILE_FLAGS="-m64 -fno-stack-protector -z execstack -no-pie -Wno-unused-result -Wno-stringop-overflow"
elif [[ "$OSTYPE" == "darwin"* ]]; then
    echo "[+] Detected macOS, using macOS-specific flags"
    COMPILE_FLAGS="-m64 -fno-stack-protector -no-pie -Wno-unused-result -Wno-stringop-overflow"
else
    echo "[+] Using generic flags"
    COMPILE_FLAGS="-m64 -fno-stack-protector -no-pie -Wno-unused-result -Wno-stringop-overflow"
fi

echo "[+] Testing vulnerable program..."

# Test 1: Basic functionality
echo "Test 1: Basic functionality"
echo "test" | timeout 5s ./compiled/vulnerable_code > /dev/null 2>&1
if [ $? -eq 0 ] || [ $? -eq 124 ]; then
    echo "[+] Basic program execution works"
else
    echo "[-] Basic program execution failed"
fi

# Test 2: Buffer overflow vulnerability (should cause segfault)
echo "Test 2: Buffer overflow vulnerability (should cause segfault)"
python3 -c "print('A' * 100)" | timeout 5s ./compiled/vulnerable_code > /dev/null 2>&1
if [ $? -eq 139 ] || [ $? -eq 11 ]; then
    echo "[+] Buffer overflow vulnerability confirmed (segfault)"
else
    echo "[-] Buffer overflow test failed or unexpected behavior"
fi

# Test 3: Running exploit script
echo "Test 3: Running exploit script"
echo "Running exploit..."
python3 source_code/exploit.py 2>&1 | grep -q "Exploit tamamlandı\|ROP exploit başarılı\|Shellcode Enjeksiyonu\|Platform:" && echo "[+] Exploit script runs successfully!" || echo "[-] Exploit script failed"

# Test 4: Finding target function address
echo "Test 4: Finding target function address"
if command -v objdump >/dev/null 2>&1; then
    WIN_ADDR=$(objdump -t compiled/vulnerable_code 2>/dev/null | grep win_function | awk '{print $1}')
    if [ ! -z "$WIN_ADDR" ]; then
        echo "[+] Target function address: 0x$WIN_ADDR"
        echo "[+] Update exploit.py with this address if needed"
    else
        echo "[-] Could not find target function address"
    fi
else
    echo "[-] objdump not found, cannot find addresses"
fi

# Test 5: ROP gadget detection
echo "Test 5: ROP gadget detection"
if command -v objdump >/dev/null 2>&1; then
    echo "Available ROP gadgets:"
    objdump -d compiled/vulnerable_code 2>/dev/null | grep -E "(pop rdi|pop rsi|pop rdx|syscall)" | head -5
    echo "[+] ROP gadgets found"
else
    echo "[-] objdump not found, cannot analyze gadgets"
fi

echo "=== Lab Test Complete ==="
